[{"/Users/kevin/Desktop/repos/react_props_state/src/App.jsx":"1","/Users/kevin/Desktop/repos/react_props_state/src/components/Box.jsx":"2"},{"size":1566,"mtime":1637179825989,"results":"3","hashOfConfig":"4"},{"size":390,"mtime":1637179803332,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"12ogl0l",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kevin/Desktop/repos/react_props_state/src/App.jsx",["11"],"import \"./App.css\";\nimport { Component } from \"react\";\nimport Box from \"./components/Box\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // set default state\n    const boxes = [];\n    const numBoxes = 24;\n    for (let i = 0; i < numBoxes; i++) {\n      boxes.push({\n        id: i,\n        color: `rgb(${this.getRandomColor()}, ${this.getRandomColor()}, ${this.getRandomColor()})`,\n      });\n    }\n\n    // bind methods to this\n    this.state = { boxes };\n    this.handleBoxClick = this.handleBoxClick.bind(this);\n  }\n  handleBoxClick(e) {\n    console.log(e.target.id);\n    const newBoxes = this.state.boxes.map((box) => {\n      if (box.id == e.target.id) {\n        box.color = `rgb(${this.getRandomColor()}, ${this.getRandomColor()}, ${this.getRandomColor()})`;\n      }\n      return box;\n    });\n    this.setState({ boxes: newBoxes });\n  }\n  getRandomColor() {\n    const rgb = Math.round(Math.random() * 255);\n    return rgb;\n  }\n\n  render() {\n    return (\n      <main\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          textAlign: \"center\",\n        }}\n      >\n        <h1>React: State and Props</h1>\n        <div className=\"App\">\n          {this.state.boxes.map((box) => {\n            return (\n              <Box\n                key={box.id}\n                id={box.id}\n                color={box.color}\n                handleClick={this.handleBoxClick}\n              />\n            );\n          })}\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","/Users/kevin/Desktop/repos/react_props_state/src/components/Box.jsx",[],{"ruleId":"12","severity":1,"message":"13","line":26,"column":18,"nodeType":"14","messageId":"15","endLine":26,"endColumn":20},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]